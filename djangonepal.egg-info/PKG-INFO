Metadata-Version: 2.1
Name: djangonepal
Version: 0.0.5
Summary: A Django app to get information about Adminstrative bodies of Nepal.
Home-page: https://github.com/AtitBimali/django-nepal
Author: Atit Bimali
Author-email: atitbimali@gmail.com
License: MIT
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE


Django Nepal


Djangonepal is a Django app that provides information about the administrative bodies of Nepal. Currently it has
the names of seven provinces of Nepal, name of the districts inside each of the provinces and name of all the municipalities
( including Metropolitan, Sub-Metropolitan and rural Municipalities aka Gaun Palika) inside each districts.
Hope this saves your time while working on your web project based project for Nepal.



Quick start
-----------

1. Add "djangonepal" to your INSTALLED_APPS setting like this::

    INSTALLED_APPS = [
        ...

        'djangonepal',

        ...
    ]

2. Run ``python manage.py makemigrations djangonepal``

3. Run ``python manage.py migrate`` to create the models.

4. Add ``djangonepal.context_processors.data`` to your 'context_processors' (optional)

    'context_processors': [
        ...

        'djangonepal.context_processors.data'

        ...
        ]

5. Run ``python manage.py runscript load_data`` wait till the import finishes. This import will let 
   you use the data the way you want.

6. If you followed step 4 you should be able to render it in your template using 
        
            {% for i in province %}
            <p> {{i.name}} </p>
            {% endfor %}
        
    For district ``{{i.district}}``
    For VDC/Municipality/Metropolitan/Sub-Metropolitan ``{{i.municipality}}``

7. You could also register the model on your admin.py file with 

   
        from djangonepal.models import * 
        admin.site.register(Province)
        admin.site.register(District)
        admin.site.register(Municipality)

    
